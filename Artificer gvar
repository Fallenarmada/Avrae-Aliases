{{x=get_gvar("67aa0ea2-981e-40ef-a1c7-5e1341b85110").split("|")}}
{{level=character().levels.get("Artificer")}}
{{l=level>10 if level else ""}}
{{Magic=cc_exists("Magical Tinkering")}}
{{Lesser=cc_exists("Lesser Restoration")}}
{{Great=cc_exists("Greater Restoration")}}
{{Heal=cc_exists("Heal")}}
{{dummy=4 if int(level)>14 else 2}}
{{set_cvar("Jolt", dummy) if '"ArtificerLevel: Battle Smith"' in get("subclass", "") and int(level)>8 else ""}}
{{slot=1 if "1" in input else 2 if "2" in input else 3 if "3" in input else 4 if "4" in input else 5 if "5" in input else 6 if "6" in input else 7 if "7" in input else 8 if "8" in input else 9 if "9" in input else 0}}
{{aroll=vroll("1d6") if not slot else vroll("0d2")}}
{{elixir="Healing" if aroll.total==1 or "healing" in input else "Swiftness" if aroll.total==2 or "swift" in input else "Resilience" if aroll.total==3 or "resilience" in input else "Boldness" if aroll.total==4 or "bold" in input else "Flight" if aroll.total==5 or "flight" in input else "Transformation" if aroll.total==6 or "transform" in input else ""}}
{{effect="The drinker regains a number of hit points equal to 2d4 + your Intelligence modifier." if aroll.total==1 or "healing" in input else "The drinker's walking speed increases by 10 feet for 1 hour." if aroll.total==2 or "swift" in input else "The drinker gains a +1 bonus to AC for 10 minutes." if aroll.total==3 or "resilience" in input else "The drinker can roll a d4 and add the number rolled to every attack roll and saving throw they make for the next minute." if aroll.total==4 or "bold" in input else "The drinker gains a flying speed of 10 feet for 10 minutes." if aroll.total==5 or "flight" in input else "The drinker's body is transformed as if by the alter self spell. The drinker determines the transformation caused by the spell, the effects of which last for 10 minutes." if aroll.total==6 or "transform" in input else ""}}
{{s="Absorb Elements" if "Absorb" in input and l else "Alarm" if "Alarm" in input and l else "Catapult" if "Catapult" in input and l else "Cure Wounds" if "Cure" in input and l else "Detect Magic" if "Detect" in input and l else "Disguise Self" if "Disguise" in input and l else "Expeditious Retreat" if "Expeditious" in input and l else "Faerie Fire" if "Faerie" in input and l else "False Life" if "False" in input and l else "Feather Fall" if "Feather" in input and l else "Grease" if "Grease" in input and l else "Identify" if "Identify" in input and l else "Jump" if "Jump" in input and l else "Longstrider" if "Longstrider" in input and l else "Purify Food and Drink" if "Purify" in input and l else "Sanctuary" if "Sanctuary" in input and l else "Snare" if "Snare" in input and l else "Aid" if "Aid" in input and l else "Alter Self" if "Alter" in input and l else "Arcane Lock" if "Arcane" in input and l else "Blur" if "Blur" in input and l else "Continual Flame" if "Continual" in input and l else "Darkvision" if "Darkvision" in input and l else "Enhance Ability" if "Enhance" in input and l else "Enlarge/Reduce" if "Enlarge" in input and l else "Heat Metal" if "Heat" in input and l else "Invisibility" if "Invisibility" in input and l else "Lesser Restoration" if "Lesser" in input and l else "Levitate" if "Levitate" in input and l else "Magic Mouth" if "Mouth" in input and l else "Magic Weapon" if "Weapon" in input and l else "Protection From Poison" if "Protection" in input and l else "Pyrotechnics" if "Pyrotechnics" in input and l else "Rope Trick" if "Rope" in input and l else "See Invisibility" if "See" in input and l else "Skywrite" if "Skywrite" in input and l else "Spider Climb" if "Spider" in input and l else "Web" if "Web" in input and l else "None" if "reset" in input else "None" if "list" in input else err("You must select a spell from the Artificer spell list! Argument must be the first word of the spell capitalized. For example, `! artificer spell Continual` for Continual Flame") if "spell" in input and l else "You do not have this ability" if "spell" in input and not l else ""}}
{{"" if "list" in input and "spell" in input else set_cvar("Spell_Storing_item", "") if "reset" in input and "spell" in input else set_cvar("Spell_Storing_Item", s) if "spell" in input else ""}}
{{set_cvar_nx("Infusion", dump_json([])) if level else ""}}
{{set_cvar_nx("Tinker", dump_json([])) if level else ""}}
{{valid=get_cc("Magical Tinkering")>0 if Magic else ""}}
{{explanation="Boots of the Winding Path" if "boots" in input else "Enhanced Defense" if "defense" in input else "Enhanced Arcane Focus" if "focus" in input else "Enhanced Weapon" if "weapon" in input else "Homunculus Servant" if "servant" in input else "Radiant Weapon" if "radiant" in input else "Repeating Shot" if "shot" in input else "Repulsion Shield" if "shield" in input else "Resistance Armor" if "armor" in input else "Returning Shot" if "returning" in input else "" if "list" in input or "reset" in input else err("You must specify: armor, boots, weapon, defense, focus, shot, returning, shield, radiant, or servant") if "infusion" in input else "Testing"}}
{{tinker="Bright Light" if "light" in input else "Message" if "message" in input else "Odor" if "odor" in input else "Nonverbal Sound" if "sound" in input else "Visual Effect" if "visual" in input else "None" if "reset" in input or "list" in input else err("You must specify: light, message, odor, sound, or visual") if "magical" in input else "Test"}}
{{changelog = load_json(Infusion) if get("Infusion") else ""}}
{{changelog2=load_json(Tinker) if get("Tinker") else ""}}
{{"" if "list" in input else changelog.append({"explanation": explanation}) if "infusion" in input else ""}}
{{"" if "list" in input else changelog2.append({"effect":tinker}) if "magical" in input and valid and Magic else ""}}
{{set_cvar("Infusion", []) if "reset" in input and "infusion" in input else set_cvar("Infusion", dump_json(changelog)) if "infusion" in input else set_cvar("Tinker", []) if "reset" in input else set_cvar("Tinker", dump_json(changelog2)) if "magical" in input and valid and Magic else ""}}
{{ change_log_msg = "\n".join([f'{item["explanation"]}' for item in changelog]) if len(changelog) and "infusion" in input else 'Nothing to report' }}
{{change_log2_msg="\n".join([f'{item["effect"]}' for item in changelog2]) if len(changelog2) and "magical" in input and valid and Magic else 'Nothing to Report'}}
-title "{{"Artificer Infusions Active" if "infusion" in input and level else "Magical Tinkering" if "magical" in input and level else "Spell Storing Item" if "spell" in input and level else "Experimental Elixir" if "alchemist" in input and "elixir" in input and level else "Chemical Mastery" if "alchemist" in input and "great" in input and level or "heal" in input and level else "Using the Artificer Alias"}}"
{{f'-f "{name} {"reset their infusions!" if "reset" in input else "checks their infusion list" if "list" in input else "added an infusion!" if "infusion" in input else ""}"' if "infusion" in input and level else f'-f "{name} {"resets their Magical items!" if "reset" in input else "Checks their Magical Items!" if "list" in input else "Uses Magical Tinkering!" if valid and Magic else "tries to use Magical Tinkering!" if "magical" in input else ""}"' if "magical" in input and level else f'-f "{name} {"checks their Spell Storing Item" if "list" in input else "resets their Spell Storing Item" if "reset" in input else "uses Spell Storing Item" if "spell" in input else ""}"' if "spell" in input and level else f'-f "{name} {"Makes an Experimental Elixir!" if "elixir" in input else "Uses Restorative Reagents!" if "lesser" in input else "Uses Chemical Mastery!" if "great" in input or "heal" in input else ""}"' if "alchemist" in input and level else f'-f "Base Artificer|{x[15]}"'}}
{{f'-f "Infusion Added|{"Your infusions have been reset!" if "reset" in input else "None" if "list" in input else explanation}"' if "infusion" in input and level else f'-f "Tinkering Effect|{"Your Magical items have been reset" if "reset" in input else "None" if "list" in input else tinker}"' if "magical" in input and level else f'-f "Spell Stored|{"Your Spell Storing Item has been reset" if "reset" in input else get("Spell_Storing_Item") if "list" in input and get("Spell_Storing_Item") else s}"' if "spell" in input and level else f'-f "Spell Slot Used|{slot}"' if "alchemist" and "elixir" in input and slot and level else f'-f "Experimental Elixir Roll|{aroll}"' if "alchemist" and "elixir" in input and level else f'-f "Infusions|{x[10]}"' if not "alchemist" in input else ""}}
{{f'-f "Description|{x[0] if "boots" in input else x[1] if "defense" in input else x[8] if "focus" in input else x[9] if "enhanced weapon" in input else x[2] if "servant" in input else x[3] if "radiant" in input else x[4] if "shot" in input else x[5] if "shield" in input else x[6] if "armor" in input else x[7] if "returning" in input else "None"}"' if "infusion" in input and level else f'-f "Description|{x[11] if "light" in input and valid else x[12] if "message" in input and valid else x[13] if "odor" in input and valid else x[13] if "sound" in input and valid else x[14] if "visual" in input and valid else "None" if "reset" in input or "list" in input else ""}"' if "magical" in input and level else f'-f "Description|{elixir}"' if "alchemist" and "elixir" in input and level else f'-f "Description|{x[21]}"' if "alchemist" in input and "lesser" in input and level else f'-f "Description|{x[28]}"' if "alchemist" in input and "great" in input and level else f'-f "Description|{x[27]}"' if "alchemist" in input and "heal" in input and level else f'-f "Alchemist|{x[20]}"' if not "spell" in input else ""}}
{{f'-f "All Infusions Active|{"None" if "reset" in input else change_log_msg}"' if "infusion" in input and level else f'-f "Magical Tinkering Effects Active|{change_log2_msg}"' if "magical" in input and level else f'-f "Spell Storing Item Usage|[!cast Alarm i ssi] an example of using this ability to cast a spell"' if "spell" in input and level else f'-f "Experimental Elixir Effect|{effect}"' if "alchemist" and "elixir" in input and level else f'-f "Artillerist|{x[16]}"' if not "alchemist" in input else ""}}
{{"" if "reset" in input else "" if "list" in input else mod_cc("Magical Tinkering", -1) if "magical" in input and Magic else ""}}
{{"" if "reset" in input else "" if "list" in input else mod_cc("Infused Items", -1) if "infusion" in input and cc_exists("Infused Items") else ""}}
{{set_cc("Magical Tinkering", intelligenceMod) if "reset" in input and "magical" in input and Magic else ""}}
{{mod_cc("Infused Items", +12) if "reset" in input and "infusion" in input and cc_exists("Infused Items") else ""}}
{{set_cc("Spell-Storing Item", intelligenceMod*2) if "reset" in input and "spell" in input and l else ""}}
{{use_slot(slot)}}
{{mod_cc("Lesser Restoration", -1) if Lesser and int(get_cc("Lesser Restoration"))>0 and "alchemist" in input and "lesser" in input else err("You must finish a long rest before using this ability") if "alchemist" in input and "lesser" in input and Lesser else ""}} 
{{mod_cc("Greater Restoration", -1) if Great and int(get_cc("Greater Restoration"))>0 and "alchemist" in input and "great" in input else err("You must finish a long rest before using this ability") if "alchemist" in input and "great" in input and Great else ""}}
{{mod_cc("Heal", -1) if Heal and int(get_cc("Heal"))>0 and "alchemist" in input and "heal" in input else err("You must finish a long rest before using this ability") if "alchemist" in input and "heal" in input and Heal else ""}}
{{f'-f "Magical Tinkering Uses|{cc_str("Magical Tinkering") if Magic else "No Counter Found"}"' if "magical" in input and level else f'-f "Infused Items Uses|{cc_str("Infused Items") if cc_exists("Infused Items") else "No Counter Found"}"' if "infusion" in input and level else f'-f "Spell-Storing Item Uses|{cc_str("Spell-Storing Item") if cc_exists("Spell-Storing Item") else "No Counter Found"}"' if "spell" in input and level else f'-f "Experimental Elixir|{slots_str(slot) if slot else "No Counter Found"}"' if "alchemist" and "elixir" in input and slot and level else f'-f "Restorative Reagent Uses|{cc_str("Lesser Restoration") if Lesser else "No Counter Found"}"' if "alchemist" in input and "lesser" in input and level else f'-f "Greater Restoration Uses|{cc_str("Greater Restoration") if Great else "No Counter Found"}"' if "alchemist" in input and "great" in input and level else f'-f "Heal Uses|{cc_str("Heal") if Heal else "No Counter Found"}"' if "alchemist" in input and "heal" in input and level else f'-f "Battle Smith|{x[17]}"' if not "alchemist" in input else ""}}
-thumb "{{image}}"
-footer "!artificer to pull up the usage menu, any questions? Ask Fallenarmada! Want to support me? https://ko-fi.com/fallenarmada or https://www.paypal.me/AAllredLucas"
{{set_cvar("infusions", "") if "reset" in input else "" if "list" in input else set_cvar("infusions", change_log_msg) if "infusion" in input else ""}}
{{"" if get("vfeatures") else set_cvar("vfeatures", x[29])}}
{{set_cvar("tinker", change_log2_msg)}}
